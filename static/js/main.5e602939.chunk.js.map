{"version":3,"sources":["components/Section.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["Section","title","children","ContactList","id","name","number","onDeleteContact","type","onClick","list","map","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","target","value","nameId","uuidv4","telId","preventDefault","htmlFor","pattern","required","onChange","Component","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","changeContacts","item","changeFilter","useCallback","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","normalizedName","find","el","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e602939.chunk.js","sourcesContent":["export default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li>\r\n      <span>{name}:</span>\r\n      <span>{number}</span>\r\n      <button type=\"button\" id={id} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import ContactListItem from \"./ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ list, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {list.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number, id: uuidv4() });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const telId = uuidv4();\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor={nameId}>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        id={nameId}\r\n        onChange={handleChange}\r\n      />\r\n      <label htmlFor={telId}>Number</label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        id={telId}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  state: PropTypes.objectOf(PropTypes.string),\r\n};\r\n\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Component({ value, onChange }) {\r\n  return (\r\n    <div>\r\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\r\n      <input type=\"text\" value={value} id={uuidv4()} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\nComponent.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import \"./App.css\";\nimport { useState, useCallback, useMemo } from \"react\";\nimport Section from \"./components/Section\";\nimport ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nexport default function App() {\n  let arr = [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: 4591256 },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ];\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", arr);\n  const [filter, setFilter] = useState(\"\");\n\n  const formSubmitHandler = (item) => {\n    const normalizedName = item.name.toLowerCase();\n    contacts.find((el) => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : changeContacts(item);\n  };\n\n  const changeContacts = (item) => {\n    setContacts([...contacts, item]);\n  };\n\n  const changeFilter = useCallback((e) => {\n    setFilter(e.target.value);\n  }, []);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [filter, contacts]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={formSubmitHandler} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          list={filteredContacts}\n          onDeleteContact={(id) => {\n            setContacts(contacts.filter((el) => el.id !== id));\n          }}\n        />\n      </Section>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}